/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kiosk;

import java.awt.Container;
import java.awt.FlowLayout;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardOpenOption;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Arrays;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
//import net.proteanit.sql.DbUtils;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class Kiosk extends javax.swing.JFrame {
    Connection c = null;
    Statement stmt = null;
       
 //Connection conn = null;
   // ResultSet rs =null;
    //PreparedStatement pst = null;

    /**
     * Creates new form NewJFrame1
     */
    public Kiosk() throws ClassNotFoundException  {
        initComponents(); 
        
      //  conn=javaconnect.connectDb();  
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jButton21 = new javax.swing.JButton();
        display_message_field1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 0, 0));
        setBounds(new java.awt.Rectangle(400, 200, 0, 0));
        setFocusCycleRoot(false);
        setName("kiosk"); // NOI18N
        setResizable(false);

        jButton21.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton21.setForeground(new java.awt.Color(204, 0, 0));
        jButton21.setText("Close Connection");
        jButton21.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        display_message_field1.setName("info3401");
        display_message_field1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                display_message_field1ComponentAdded(evt);
            }
        });
        display_message_field1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                display_message_field1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        display_message_field1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                display_message_field1InputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        display_message_field1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                display_message_field1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(display_message_field1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(display_message_field1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        getAccessibleContext().setAccessibleName("kiosk");

        pack();
    }// </editor-fold>                        

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {                                          
System.exit(DISPOSE_ON_CLOSE);
System.exit(EXIT_ON_CLOSE);

    }                                         

    private void display_message_field1ComponentAdded(java.awt.event.ContainerEvent evt) {                                                      
        // TODO add your handling code here:
    }                                                     

    private void display_message_field1AncestorAdded(javax.swing.event.AncestorEvent evt) {                                                     
      message("3401");  
    }                                                    

    private void display_message_field1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {                                                              
        // TODO add your handling code here:
    }                                                             

    private void display_message_field1ActionPerformed(java.awt.event.ActionEvent evt) {                                                       
     message("3401");    
        // TODO add your handling code here:
    }                                                      

    /**
     * @param args the command line arguments
     */
//   void report_3402(){
//         //   JFrame kiosk;
//     //   kiosk = new UserList();JTable reporttable = new JTable(model);
//        DefaultTableModel table_3401 = new DefaultTableModel();
//        
//    Container cnt = this.getContentPane();
// //   cnt.setMaximumSize(new java.awt.Dimension(600, 600));
// //   cnt.setMinimumSize(new java.awt.Dimension(600, 600));
//
//// JTable table_3401 = new JTable(table_3401);
// 
//        cnt.setLayout(new FlowLayout(FlowLayout.LEFT));
//        table_3401.addColumn("Time");
//        table_3401.addColumn("Rented Strollers");
//        table_3401.addColumn("Returned Strollers");
//        table_3401.addColumn("Coins in Kiosk");
//        table_3401.addColumn("Bills in Kiosk");
//        try {
//             Class.forName("org.postgresql.Driver");
//            Connection con = DriverManager.getConnection("jdbc:postgresql://" + getProperty("connection") + "",
//                     getProperty("database_name"), getProperty("database_password"));
//            PreparedStatement pstm = con.prepareStatement("select  date, total_bills,daily_total_amount_of_sales, daily_total_amount_of_returns, daily_total_received_bills from kiosk_3402 WHERE \"date\" > (CURRENT_DATE - INTERVAL '100 days');");
//                   // + "report_day="+time.todays_date_id_for_database()+";");
//            ResultSet Rs = pstm.executeQuery();
//            while(Rs.next()){
//                table_3401.addRow(new Object[]{Rs.getString(1), Rs.getString(2),Rs.getString(3),Rs.getString(4),Rs.getString(5)});
//            }
//        } catch (Exception e) {
//            System.out.println(e.getMessage());
//        }
//        JScrollPane pg = new JScrollPane(table_3402);
//        cnt.add(pg);
//        this.pack();
//            // TODO add your handling code here:
//    
//    
//    }

     
     
     void message(String kiosk_name) {
       
        try {
            Class.forName("org.postgresql.Driver"); 
            c = DriverManager.getConnection("jdbc:postgresql://" + properties.connection + "",
                properties.database_name, properties.database_password);
            stmt = c.createStatement();
              
            stmt = c.createStatement();
String sql_select = "SELECT kiosk_connection FROM remote Where kiosk_id="+kiosk_name+";";
                                //"SELECT dispense_5 FROM remote WHERE kiosk_id ="+ properties.kiosk_id + ";";

			System.out.println(sql_select);
		    stmt.executeQuery(sql_select);
			ResultSet resultSet = stmt.executeQuery(sql_select);
                        while (resultSet.next()) {
			        String message = resultSet.getString("kiosk_connection");
				System.out.println(message);
                                display_message_field1.setText(message);                       
                                      
                                   }
                       //c.commit();
			stmt.close();
			c.close();
        
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
         }
    public static void main(String args[]) throws ClassNotFoundException , IOException, InterruptedException {

  //      JFrame rtable2 = new UserList();
//        rtable2.setTitle("Swing Example");
    //    rtable2.setSize(600, 400);
  //      rtable2.setLocationRelativeTo(null);
     //   rtable2.setVisible(true);
      //  rtable2.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Kiosk().setVisible(true);
                } catch (Exception e) {
                    Logger.getLogger(Kiosk.class.getName()).log(Level.SEVERE, null, e);
                }
            }
        });
        Kiosk object = new Kiosk();
	      object.action();
      }

      private javax.swing.JButton jButton1;
      private javax.swing.JTextField display_message_field1;
      private javax.swing.JButton jButton21;
      
  	private synchronized void action() throws IOException, InterruptedException {
  		try {
  			
  			while (true) {
  			System.out.println("action class are running program ==> " + Calendar.getInstance().getTime());
  			
  			
  			this.wait(3000);
  			read_database.read();
  			Write_file.update_totalcash();
             write_database.kiosk_data_update();
    

  			} 
  			} catch (InterruptedException e) {e.printStackTrace();
  			}
  	
  		
   
  	}
  }


   
